/*
许多编译器给变量分配内存地址时，其地址都是变量字节数的倍数，所以4字节变量的地址是4的倍数，8字节变量的地址是8的倍数，这就确保内存的访问是最高效的。
如果变量地址之间的间隔大于变量占用的字节数，可能是因为程序编译为调试版本。在调试模式下，编译器会配置额外的空间，以存储变量的其他信息，这些信息在程序以调试模式下执行时使用。
*/

void var_address_research();
void struct_address();

struct BaseType {
    int i;
    long ii;
    float j;
    double jj;
}

int main(void) {
var_address_research();
return 0;
}

// 函数内声明的变量一般分配连续的地址
void var_address_research() {
int a = 1;
int b = 2;
int c = 3;

long e = 4L;
long f = 5L;
long g = 6L;

printf("%p %p %p \n", &a, &b, &c);

printf("%p %p %p \n", &e, &f, &g);
}

// 结构字段的地址分配
void struct_address() {

}
